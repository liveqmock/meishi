<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:util="http://www.springframework.org/schema/util"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
              http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- 不要过滤图片等静态资源 -->
	<http pattern="/**/*.jpg" security="none" />
	<http pattern="/**/*.png" security="none" />
	<http pattern="/**/*.gif" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/**/*.js" security="none" />
	<http pattern="/**/*.ico" security="none" />
	
	<http pattern="/**/*.eot" security="none" />
	<http pattern="/**/*.svg" security="none" />
	<http pattern="/**/*.ttf" security="none" />
	<http pattern="/**/*.woff" security="none" />
	
	<http pattern="/remoting/**" security="none" />
	
	<http pattern="/index.jsp" security="none" />
	<http pattern="/index*.jsp" security="none" />

	<!-- 登录页面和忘记密码页面不过滤  -->
	<http pattern="/login" security="none" />
	<http pattern="/jsp/forgotpassword.jsp" security="none" />

	<http use-expressions="true" entry-point-ref="authenticationEntryPoint" access-denied-page="/static/exception/accessDenied.html">
		<!-- test -->
		<intercept-url pattern="/test/a" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/test/b" access="hasRole('ROLE_MANAGER')" />
		<intercept-url pattern="/test/c" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/console/**" access="isAuthenticated()" />
		
		<!-- 会话管理
        <session-management invalid-session-url="/static/exception/timeout.html">
            <concurrency-control max-sessions="10" error-if-maximum-exceeded="true" />
        </session-management>
         -->
         
		<!-- 只cache get,避免ajax post 被cache 
		<request-cache ref="httpSessionRequestCache"/>
		-->
        <!-- remember me 
		<remember-me key="bookingtest" />
		-->
        
		<!-- 增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了，这个filter位于FILTER_SECURITY_INTERCEPTOR之前 -->
		<custom-filter ref="securityFilter" before="FILTER_SECURITY_INTERCEPTOR" />
		<!-- 登录过滤器-->
		<custom-filter ref="loginFilter" before="FORM_LOGIN_FILTER" />

		<!-- ajax登录过滤器 -->
		<custom-filter ref="ajaxLoginFilter" position="FORM_LOGIN_FILTER" />
		
		<!-- 注销过滤器-->
		<custom-filter ref="logoutFilter" before="LOGOUT_FILTER" />  
		 
	</http>
	
	<!-- 
	<beans:bean id="httpSessionRequestCache" class="org.springframework.security.web.savedrequest.HttpSessionRequestCache">
		<beans:property name="justUseSavedRequestOnGet" value="true" />
	</beans:bean>
	 -->
	 
	<beans:bean id="sessionRegistry" class="com.bestaone.meishi.core.authentication.CommonSessionRegistry" />
	
	<beans:bean id="sessionStrategy" class="com.bestaone.meishi.core.authentication.CommonConcurrentSessionControlStrategy">
		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
	</beans:bean>

	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性，我们的所有控制将在这三个类中实现，解释详见具体配置  -->
    <beans:bean id="securityFilter" class="com.bestaone.meishi.core.security.SimpleFilterSecurityInterceptor">
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="accessDecisionManager" ref="simpleAccessDecisionManager" />
    </beans:bean>
 
 	<!-- 认证管理器  -->
	<authentication-manager alias="authenticationManager">
	    <authentication-provider ref="commonAuthenticationProvider" />
	</authentication-manager>

	<beans:bean id="commonAuthenticationProvider" class="com.bestaone.meishi.core.security.SimpleAuthenticationProvider" />
	
	<!-- 未登录的切入点 -->
    <beans:bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/login"></beans:property>
    </beans:bean>
    
    <util:list id="authenticationProcessors">
		<beans:bean class="com.bestaone.meishi.core.security.CaptchaAuthentication" />
		<beans:bean class="com.bestaone.meishi.core.security.UsbKeyAuthentication" />
		<beans:bean class="com.bestaone.meishi.core.security.DynamicPasswdAuthentication" />
	</util:list>
	
	<!-- 跳转方式登录  -->
	<beans:bean id="loginFilter" class="com.bestaone.meishi.core.security.LoginAuthenticationFilter">
		<beans:property name="sessionAuthenticationStrategy" ref="sessionStrategy"/>
		<beans:property name="authenticationProcessors" ref="authenticationProcessors"/>
		<beans:property name="authenticationManager" ref="authenticationManager"/>
		<beans:property name="authenticationFailureHandler" ref="failureHandler"/>
		<beans:property name="authenticationSuccessHandler" ref="successHandler"/>
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check"/>
	</beans:bean>
	<beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login?error=1" />
	</beans:bean>
	<beans:bean id="successHandler" class="com.bestaone.meishi.core.security.UrlAuthenticationSuccessHandler">
		<beans:property name="alwaysUseDefaultTargetUrl" value="true"/>
		<beans:property name="defaultTargetUrl" value="/"/>
	</beans:bean>
	
	<!-- ajax方式登录  --> 
	<beans:bean id="ajaxLoginFilter" class="com.bestaone.meishi.core.security.LoginAuthenticationFilter">
		<beans:property name="sessionAuthenticationStrategy" ref="sessionStrategy"/>
		<beans:property name="authenticationProcessors" ref="authenticationProcessors"/>
		<beans:property name="authenticationManager" ref="authenticationManager"/>
		<beans:property name="authenticationFailureHandler" ref="ajaxFailureHandler"/>
		<beans:property name="authenticationSuccessHandler" ref="ajaxSuccessHandler"/>
		<beans:property name="filterProcessesUrl" value="/ajaxLoginValidation"/>
	</beans:bean>
	<beans:bean id="ajaxFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/ajaxLoginFailure" />
	</beans:bean>
	<beans:bean id="ajaxSuccessHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/ajaxLoginSuccess" />
	</beans:bean>
	
	<!-- 注销过滤器，完成前台用户注销时的定向功能 -->  
    <beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">  
        <beans:constructor-arg value="/" />  
        <beans:constructor-arg>  
            <beans:list>  
                <beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />  
            </beans:list>  
        </beans:constructor-arg>  
        <beans:property name="filterProcessesUrl" value="/j_spring_security_logout" />  
    </beans:bean>  
 
</beans:beans>
